// âœ… Requirements:
//     Create a tuple type Coordinate with:
//
// First value: number (x)
//
// Second value: number (y)
//
// Declare a variable point1 with value [10, 20]
//
//     Try assigning [10, "top"] â€” what happens?
//
// ðŸ§ª Practice

let Coordinate:[number, number]=[10,10];
Coordinate=[10, "DEREGE"] // in this string is error pron

type score = number|"N/A";
let scors: score[] = [];

// Create a Product type
//     name: string
// price: number
// category: either "phone" | "laptop" | "tablet"
// discount: optional number
// Create two variables:
//     product1: with all properties
// product2: without the discount

type product = {
    name : string,
    price : number,
    catagory : "labtop" | "tablet" | "phone",
    discount: number | null;
}
let product1: product = {
    name:"pc",
    price: 23000,
    catagory: "labtop",
    discount: 5
}
let product2: product = {
    name:"pc",
    price: 23000,
    catagory: "labtop",
    discount: null
}

// Create a type Student:
// id: string or number
// name: string
// scores: array of numbers
// status: "pass" | "fail" | "not taken"
// details: a tuple of [string, number] â†’ [grade, section]
// Declare a student variable and assign values

type  student = {
    id: string | number,
    name : string,
    score: Array<number>,
    status : "pass" | "fail" | "pending",
    detail : [string , number]


}
let student : student ={
    id : 1,
    name : "demeke",
    score: [34, 56,89],
    status: "pass",
   detail: [2,3]
}

// Create a Student type with:
// id â†’ number (readonly)
// name â†’ string
// batch â†’ string
// email â†’ optional string
// isGraduated â†’ optional boolean
// Then create two students:
//     One with all values
// One without optional fields

type students = {
     readonly id: number,
    name :string,
    batch :  string ,
    email?:string,
    isgraduated?: boolean

}
let result1 : students = {
    id : 1,
    name : "demeke",
    batch: "gc"
}
let result2: students = {
    id : 1,
    name : "derege",
    batch: "fresh",
    email : "derege1999@gmail.com",
    isgraduated: true
}

//Create a type Course with:
// readonly code â†’ string (e.g. "CS101")
// name â†’ string
// creditHour â†’ number
// description â†’ optional string

type Course =  {
    readonly code : string,
    name : string,
    creditHour: number,
    description?: string
}
let Course1: Course = {
    code = "CS101",
    name = "typescript",
    creditHour : 5,

}